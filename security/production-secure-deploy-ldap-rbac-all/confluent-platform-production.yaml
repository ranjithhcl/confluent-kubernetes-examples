apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  authentication:
    type: digest
    jaasConfig:
      secretRef: credential
  tls:
    secretRef: tls-group1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-group1
  listeners:
    internal:
      authentication:
        type: ldap
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  configOverrides:
    server:
      - message.max.bytes=26214700
      - default.replication.factor=3
      - min.insync.replicas=2
      - ldap.com.sun.jndi.ldap.read.timeout=60000
      - confluent.balancer.enable=true
      - ldap.java.naming.referral=follow
      - ldap.search.mode=GROUPS
      - confluent.metrics.reporter.bootstrap.servers=kafka-0.kafka.confluent.svc.cluster.local:9072,kafka-1.kafka.confluent.svc.cluster.local:9072,kafka-2.kafka.confluent.svc.cluster.local:9072
      - confluent.metrics.reporter.topic.max.message.bytes=10485760
      - metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
      - confluent.metrics.reporter.topic.partitions=12
      - confluent.metrics.reporter.topic.create=true
      - confluent.metrics.reporter.topic=_confluent-metrics
      - state.dir=/mnt/data/data0/data1
      - log.dirs=/mnt/data/data0/data1/logs
  authorization:
    type: rbac
    superUsers:
    - User:kafka
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          configurations:
            groupNameAttribute: cn
            groupObjectClass: posixGroup
            groupMemberAttribute: memberUid
            groupMemberAttributePattern: CN=(.*),ou=(.*),DC=test,DC=com
            groupSearchScope: 2
            groupSearchBase: ou=groups,dc=test,dc=com
            userNameAttribute: cn
            userMemberOfAttributePattern: CN=(.*),DC=test,DC=com
            userObjectClass: "*"
            userSearchBase: dc=test,dc=com
            userSearchScope: 2
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2182
      authentication:
        type: digest
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server-connect:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  tls:
    secretRef: tls-group1
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: connect-mds-client
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  tls:
    secretRef: tls-group1
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: sr-mds-client
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  tls:
    secretRef: tls-group1
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: krp-mds-client
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-ksqldb-server:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  authorization:
    type: rbac
  tls:
    secretRef: tls-group1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: ksqldb-mds-client
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500 
  image:
    application: confluentinc/cp-enterprise-control-center:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
        - confluent.controlcenter.kafka.cfk.bootstrap.servers=kafka.cfk.svc.cluster.local:9092
        - confluent.controlcenter.kafka.cfk.security.protocol=SASL_SSL
        - confluent.controlcenter.kafka.cfk.metadata.bootstrap.server.urls=https://kafka.cfk.svc.cluster.local:8090
        - confluent.controlcenter.kafka.cfk.metadata.basic.auth.user.info=${file:/mnt/secrets/c3-mds-client/bearer.txt:username}:${file:/mnt/secrets/c3-mds-client/bearer.txt:password}
        - confluent.controlcenter.kafka.cfk.metadata.username=c3
        - confluent.controlcenter.kafka.cfk.metadata.password=c3-secret
        - confluent.controlcenter.kafka.cfk.streams.security.protocol=SASL_SSL
        - confluent.controlcenter.kafka.cfk.data.dir=/mnt/data/data1
        - confluent.controlcenter.kafka.cfk.rest.authentication.method=BEARER
        - confluent.controlcenter.kafka.cfk.rest.authentication.skip.paths=/2.0/status/app_info
        - confluent.controlcenter.kafka.cfk.listeners=https://kafka.cfk.svc.cluster.local:9021
        - confluent.controlcenter.kafka.cfk.rest.ssl.enabled.protocols=TLSv1.2
        - confluent.controlcenter.kafka.cfk.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
        - confluent.controlcenter.kafka.cfk.rest.ssl.keystore.location=/mnt/cfk/sslcerts/keystore.p12
        - confluent.controlcenter.kafka.cfk.rest.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
        - confluent.controlcenter.kafka.cfk.rest.ssl.truststore.location=/mnt/cfk/sslcerts/truststore.p12
        - confluent.controlcenter.kafka.cfk.rest.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
        - confluent.controlcenter.kafka.cfk.internal.topics.partitions=12
        - confluent.controlcenter.kafka.cfk.internal.topics.replication=3
#        - confluent.controlcenter.kafka.confluent.bootstrap.servers=kafka.confluent.svc.cluster.local:9092
#        - confluent.controlcenter.kafka.confluent.security.protocol=SASL_SSL
#        - confluent.controlcenter.kafka.confluent.metadata.bootstrap.server.urls=https://kafka.confluent.svc.cluster.local:8090
#        - confluent.controlcenter.kafka.confluent.metadata.basic.auth.user.info=${file:/mnt/secrets/c3-mds-client/bearer.txt:username}:${file:/mnt/secrets/c3-mds-client/bearer.txt:password}
#        - confluent.controlcenter.kafka.confluent.metadata.username=c3
#        - confluent.controlcenter.kafka.confluent.metadata.password=c3-secret
#        - confluent.controlcenter.kafka.confluent.streams.security.protocol=SASL_SSL
#        - confluent.controlcenter.kafka.confluent.data.dir=/mnt/data/data0/data1
#        - confluent.controlcenter.kafka.confluent.rest.authentication.method=BEARER
#        - confluent.controlcenter.kafka.confluent.rest.authentication.skip.paths=/2.0/status/app_info
#        - confluent.controlcenter.kafka.confluent.listeners=https://kafka.confluent.svc.cluster.local:9021
#        - confluent.controlcenter.kafka.confluent.rest.ssl.enabled.protocols=TLSv1.2
#        - confluent.controlcenter.kafka.confluent.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#        - confluent.controlcenter.kafka.confluent.rest.ssl.keystore.location=/mnt/sslcerts/keystore.p12
#        - confluent.controlcenter.kafka.confluent.rest.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#        - confluent.controlcenter.kafka.confluent.rest.ssl.truststore.location=/mnt/sslcerts/truststore.p12
#        - confluent.controlcenter.kafka.confluent.rest.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#       - bootstrap.servers=kafka.confluent.svc.cluster.local:9073
#       - confluent.monitoring.interceptor.bootstrap.servers=kafka.cfk.svc.cluster.local:9092
#       - confluent.controlcenter.internal.topics.partitions=12
#       - confluent.controlcenter.internal.topics.replication=3
#       - confluent.controlcenter.connect.connect.cluster=https://connect.confluent.svc.cluster.local:8083,https://connect.cfk.svc.cluster.local:8083
#       - confluent.controlcenter.ksql.ksqldb.advertised.url=https://ksqldb.confluent.svc.cluster.local:8088,https://ksqldb.cfk.svc.cluster.local:8088
#       - confluent.controlcenter.ksql.ksqldb.url=https://ksqldb.confluent.svc.cluster.local:8088,https://ksqldb.cfk.svc.cluster.local:8088
#       - confluent.controlcenter.schema.registry.url=https://schemaregistry.confluent.svc.cluster.local:8081,https://schemaregistry.cfk.svc.cluster.local:8081
#       - confluent.controlcenter.streams.cprest.url=https://kafka.confluent.svc.cluster.local:8090,https://kafka.cfk.svc.cluster.local:8090
#       - confluent.controlcenter.streams.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required metadataServerUrls="https://kafka.cfk.svc.cluster.local:8090" ,username="${file:/mnt/secrets/c3-mds-client/bearer.txt:username}" password="${file:/mnt/secrets/c3-mds-client/bearer.txt:password}";
#       - confluent.metadata.bootstrap.server.urls=https://kafka.confluent.svc.cluster.local:8090,https://kafka.cfk.svc.cluster.local:8090
#       - confluent.controlcenter.kafka.confluent.bootstrap.servers=kafka.confluent.svc.cluster.local:9073
#       - confluent.controlcenter.kafka.kafka.bootstrap.servers=kafka.cfk.svc.cluster.local:9073
#       - confluent.controlcenter.connect.confluent.cluster=https://connect.confluent.svc.cluster.local:8083
#       - confluent.controlcenter.connect.cfk.cluster=https://connect.cfk.svc.cluster.local:8083
#       - confluent.controlcenter.schema.registry.url=https://schemaregistry.confluent.svc.cluster.local:8081
#       - confluent.controlcenter.internal.topics.replication=3
#       - confluent.monitoring.interceptor.topic.partitions=12
  authorization:
    type: rbac
  tls:
    secretRef: tls-group1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: cluster.local
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: c3-mds-client
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.confluent.svc.cluster.local:8083
        tls:
          enabled: true
    ksqldb:
      - name: ksqldb
        url:  https://ksqldb.confluent.svc.cluster.local:8088
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential
